---
import { SITE } from "@constants";
import { removeArticles, getPageMenuLinksFromPath } from "@util";
import { getCollection } from "astro:content";
import CollectionLayout from "@layouts/CollectionLayout.astro";
import TMDBCard from "@components/TMDBCard.svelte";
import MediaFilter from "@components/MediaFilter.svelte";
import Pagination from "@components/Pagination.astro";

const pageMenuLinks = getPageMenuLinksFromPath("/media");
export async function getStaticPaths({ paginate }) {
  const shows = await getCollection("shows");
  shows.sort((a, b) => {
    const nameA = removeArticles(a.data.title);
    const nameB = removeArticles(b.data.title);

    return nameA.localeCompare(nameB);
  });

  return paginate(shows, { pageSize: SITE.MOVIES_PER_PAGE });
}

const { page } = Astro.props;
const { total, currentPage, lastPage } = page;
---

<CollectionLayout
  pageTitle={`Browse Shows${currentPage > 1 ? " (" + currentPage + "/" + lastPage + ")" : ""}`}
  pageDescription="Browse Shows"
  heroTitle="Shows"
  heroSubtitle={`Browse shows (${total})`}
  heroColor="tertiary"
  {pageMenuLinks}
  {currentPage}
  pageDescription="A list of the tv shows I like"
>
  <section class="container-full">
    <MediaFilter
      client:load
      type="shows"
      color="tertiary"
      title="Filter Media"
    />

    <div class="filter-static-content">
      <div class="grid-default">
        {page.data.map((show) => <TMDBCard itemData={show} />)}
      </div>

      <Pagination
        {total}
        {currentPage}
        {lastPage}
        label="shows"
        nextUrl={page.url.next}
        prevUrl={page.url.prev}
      />
    </div>
  </section>
</CollectionLayout>
