---
import { isDevelopment, getPageMenuLinksFromPath } from "@util";
import { getCollection } from "astro:content";
import CollectionLayout from "@layouts/CollectionLayout.astro";

const notes = await getCollection("notes", ({ data }) =>
  isDevelopment ? true : data.published
);
const tags = [...new Set(notes.map((k) => k.data.tags).flat())];
const pageMenuLinks = getPageMenuLinksFromPath("/notes");

const tagsCount = {};
tags.forEach((t) => {
  tagsCount[t] = 0;
  notes.forEach((n) => {
    if (n.data.tags.includes(t)) tagsCount[t]++;
  });
});
---

<CollectionLayout
  pageTitle="🏷️ Notes by Tag"
  heroText="Notes"
  heroSubtext={`browse by tags (${tags.length})`}
  {pageMenuLinks}
  pageDescription="Notes by Tag"
>
  <section class="contain">
    <div class="list">
      {
        tags.map((t) => (
          <a class="card" href={`/notes/tags/${t}`}>
            <i>#</i>
            {t} <span>{tagsCount[t]}</span>
          </a>
        ))
      }
    </div>
  </section>
</CollectionLayout>

<style lang="scss">
  @use "@css/util";

  .list {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;

    span {
      position: absolute;
      top: 0;
      right: 0;
      font-size: 0.9rem;
      font-weight: bold;
      line-height: 1;
      padding: 0.1rem 0.4rem;
      border: 2px solid var(--font-color);
      border-right: 0;
      border-top: 0;
      border-bottom-left-radius: 0.15rem;
    }
  }

  i {
    position: relative;
    display: inline-block;
    transform: scale(1.5);
    color: var(--page-color);
  }

  .card {
    position: relative;
    width: 100%;
    padding: 1.4rem 1rem 1rem;
    background-color: var(--font-color-opposite);
    border: 2px solid var(--font-color);
    text-decoration: none;
    border-radius: 0.15rem;
    text-align: center;
    transition: none;

    &:hover {
      text-decoration: underline;
    }

    @include util.mq(sm) {
      width: auto;
      font-size: 1.5rem;
    }
  }
</style>
