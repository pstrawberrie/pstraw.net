---
import { SITE } from "@constants";
import { removeArticles, getPageMenuLinksFromPath } from "@util";
import { getCollection } from "astro:content";
import CollectionLayout from "@layouts/CollectionLayout.astro";
import TMDBCard from "@components/TMDBCard.svelte";
import Pagination from "@components/Pagination.astro";

const pageMenuLinks = getPageMenuLinksFromPath("/media");
export async function getStaticPaths({ paginate }) {
  const movies = await getCollection("movies");
  const shows = await getCollection("shows");
  const allMedia = [...movies, ...shows].sort((a, b) => {
    const nameA = removeArticles(a.data.title);
    const nameB = removeArticles(b.data.title);

    return nameA.localeCompare(nameB);
  });

  return paginate(allMedia, { pageSize: SITE.MOVIES_PER_PAGE });
}

const { page } = Astro.props;
const { total, currentPage, lastPage } = page;
---

<CollectionLayout
  pageTitle={`Browse All Media${currentPage > 1 ? " (" + currentPage + "/" + lastPage + ")" : ""}`}
  pageDescription="Browse All Media"
  heroTitle="All Media"
  heroSubtitle={`Browse all media (${total})`}
  heroColor="tertiary"
  {pageMenuLinks}
  {currentPage}
  pageDescription="A list of the movies I like"
>
  <section class="container-full">
    <Pagination
      {total}
      {currentPage}
      {lastPage}
      label="media"
      nextUrl={page.url.next}
      prevUrl={page.url.prev}
    />

    <div class="grid-default">
      {page.data.map((movie) => <TMDBCard itemData={movie} />)}
    </div>

    <Pagination
      {total}
      {currentPage}
      {lastPage}
      label="media"
      nextUrl={page.url.next}
      prevUrl={page.url.prev}
    />
  </section>
</CollectionLayout>
