---
import BaseLayout from "@layouts/BaseLayout.astro";
import { formatDate } from "@util";
const { frontmatter, slug } = Astro.props;
---

<BaseLayout
  pageTitle={`${frontmatter.title}`}
  pageDescription={frontmatter?.description}
  noBreadcrumbs={true}
>

  <article class="note">
    <div class="note-header">
      <div class="container-sm">
    {
      frontmatter?.date && (
        <div class="dates">
          Written: {formatDate("" + frontmatter.date)} by{" "}
          {frontmatter?.authors.map((a, idx) => (
            <a class="author" href={`/notes/authors/${a}`}>{a}</a><span>{idx !== frontmatter?.authors.length - 1 ? ", " : ""}</span>
          ))}
        </div>
      )
    }
    <h1 class="text-gradient">
      {frontmatter.title}
    </h1>
    {
      frontmatter?.tags && (
        <div class="tags">
          {frontmatter?.tags.map((t) => (
            <a class="tag btn-content" href={`/notes/tags/${t}`}>#{t}</a>
          ))}
        </div>
      )
    }
      </div>
    </div>

    <div class="note-content container-sm">
      <slot />
    </div>

    <div class="note-footer container-sm">
      <a href="/notes" class="btn">‚Üê Back to Notes</a>
    </div>
  </article>
</BaseLayout>

<style lang="scss">
  @use '@css/util';

  .note-header {
    padding-top: var(--space-box-v);
    padding-bottom: 2rem;
    background: var(--hero-gradient);
    border-bottom: 1px solid rgba(var(--background-accent-rgb), 0.15);
  }

  a.author {
    text-decoration: underline;
  }

  .note-content {
    position: relative;
    padding-top: 2rem;
    padding-bottom: 2rem;
  }
  article.note {
    // In-Layout Elements
    .dates {
      font-family: var(--font-family-mono);
      font-size: 1rem;
      color: var(--c-text-tertiary);
      text-align: center;
      margin-bottom: 2rem;
    }

    .tags {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      justify-content: center;
      margin-bottom: 3rem;
    }

    .note-footer {
      margin-top: 4rem;
      padding-top: 2rem;
      border-top: 1px solid rgba(var(--background-accent-rgb), 0.15);
      text-align: center;

      a {
        display: inline-block;
      }
    }

    // Global Elements (Dynamic Content)
    :global(.callouts + [client] .note-jump-wrapper) {
      margin-top: 1rem;
    }

    :global(h1) {
      text-align: center;
      font-size: var(--font-size-h1-sm);
      line-height: var(--line-height-h1-sm);
      background-image: var(--c-text-gradient-default);
      margin-bottom: 2rem;
      scroll-margin-top: calc(var(--nav-height) + 1rem);
    }

    :global(h2, h3, h4) {
      line-height: 1.2;
      scroll-margin-top: calc(var(--nav-height) + 1rem);
    }

    :global(h2) {
      font-size: 1.75rem;
      margin: 3rem 0 1.5rem;

      &::before {
        content: '';
        position: absolute;
        left: 0;
        bottom: -0.5rem;
        width: 3rem;
        height: 2px;
        background: var(--c-text-gradient-decoration);
      }
    }

    :global(h3) {
      font-size: 1.4rem;
      margin: 2rem 0 1rem 0;
    }

    :global(h4) {
      margin-bottom: 1rem;
    }

    :global(p a, ul a, ol a, blockquote a) {
      color: var(--c-text-secondary);
      text-decoration: underline;
      word-break: break-all;
    }

    :global(p a:hover, ul a:hover, ol a:hover, blockquote a:hover) {
      color: var(--c-quinary);
    }

    :global(p),
    :global(li) {
      line-height: 1.8;
      color: var(--c-text-secondary);
    }

    :global(p),
    :global(ul),
    :global(ol) {
      margin-bottom: 1.5rem;
    }

    :global(ul),
    :global(ol) {
      padding-left: 0.75rem;
      list-style-position: inside;
    }
    :global(ul) {
      list-style-type: circle;
    }

    :global(ol) {
      list-style-type: lower-roman;
    }


    :global(hr) {
      border: 0;
      border-top: 1px solid var(--c-text-muted);
      margin: 2rem 0;
    }

    :global(pre) {
      padding: 1rem;
      border-radius: 0.5rem;
      border: 1px solid var(--c-text-tertiary);
      background: var(--c-background) !important;
    }

    :global(blockquote)  {
      position: relative;
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      border-left: 4px solid var(--c-text-muted);
      margin-left: 0.5rem;
      padding-left: 1.5rem;

      p {
        color: var(--c-text-muted);
      }

      cite {
        color: var(--c-text-muted);
        font-style: italic;
      }
    }
  }
</style>
