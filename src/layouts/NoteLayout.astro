---
import BaseLayout from "@layouts/BaseLayout.astro";
import { emoji, formatDate } from "@util";
const { frontmatter, slug } = Astro.props;
---

<BaseLayout
  pageTitle={`${emoji("note")} ${frontmatter.title}`}
  pageDescription={frontmatter?.description}
  noBreadcrumbs={true}
>
  <section class="note-layout contain-sm">
    <img class="note-image" src={`/images/notes/${slug}.jpg`} />
    <h1>
      {frontmatter.title}
    </h1>
    <div class="head">
      <div class="subhead">
        {
          frontmatter?.date && (
            <div class="date">
              Written: {formatDate("" + frontmatter.date)} by{" "}
              {frontmatter?.authors.map((a, idx) => (
                <a href={`/notes/authors/${a}`}>{a}</a>
                <span>{idx !== frontmatter?.authors.length - 1 ? "," : ""}</span>
              ))}
            </div>
          )
        }
        {
          frontmatter?.tags && (
            <div class="tags">
              {" "}
              Tagged:
              {frontmatter?.tags.map((t) => (
                <a href={`/notes/tags/${t}`}>#{t}</a>
              ))}
            </div>
          )
        }
      </div>
    </div>

    <div class="content bordered">
      {
        frontmatter?.updated && (
          <div class="updated">
            Updated {formatDate("" + frontmatter.updated)}
          </div>
        )
      }
      <slot />
    </div>
  </section>
</BaseLayout>

<style lang="scss">
  @use "@css/util";

  .bordered {
    border: 2px solid var(--background-accent);
  }

  h1 {
    font-weight: bold;
  }

  .note-image {
    display: block;
    margin: 1rem 0;
  }

  .head {
    padding: 0.5rem 0;
    font-size: 1rem;
    font-weight: bold;

    a {
      font-size: 1rem;
      font-weight: bold;
    }

    .tags {
      display: flex;
      gap: 0.52rem;
    }

    .date a {
      margin-left: 7px;
      padding: 1px 10px;
      border: 1px solid var(--background-accent);
      border-radius: 0.15rem;

      &:first-child {
        margin-left: 1px;
      }
    }
  }

  .content {
    padding: 1rem 0.75rem 2rem;
    background-color: var(--font-color-opposite);

    .updated {
      display: inline-block;
      padding: 0.1rem 0.5rem;
      border: 2px solid var(--c-secondary);
      margin-bottom: 0.5rem;
      font-size: 1rem;
    }

    /* Note Layout Globals */
    // paragraphs
    :global(pre + p) {
      margin-top: 0.75em;
    }

    // offset for in-page navigation
    :global([id]:before) {
      display: block;
      content: " ";
      margin-top: -65px;
      height: 65px;
      visibility: hidden;
    }

    // lists
    :global(ul) {
      list-style-type: square;
      list-style-position: inside;
    }
    :global(ul ul) {
      padding-left: 0.7em;
    }
    :global(ul + p) {
      margin-top: 1rem;
    }

    // headers
    :global(.content h1, .content .h1, .content h2, .content .h2, .content h3, .content .h3, .content h4, .content .h4) {
      font-family: var(--ff-default);
    }
    :global(h3 + h4) {
      margin-top: 0.4em;
    }

    // markdown hr
    :global(hr) {
      display: block;
      margin: 2rem 0;
      border-color: var(--background-accent2);
    }

    // code blocks
    :global(p + pre),
    :global(pre + pre),
    :global(pre + ul),
    :global(ul + pre) {
      margin-top: 1rem;
    }

    // tables
    :global(table),
    :global(table td),
    :global(table th) {
      border: 1px solid var(--background-accent);
      border-collapse: collapse;
      padding: .4em;
    }

    // callouts
    :global(.callout) {
      display: inline-block;
      font-size: 1rem;
      line-height: 1;
      padding: 0.4em;
      border: 2px solid transparent;
    }

    :global(.callout a) {
      font-size: 1rem;
      font-weight: normal;
    }

    :global(.warning) {
      border-color: var(--c-quaternary-t2);
    }
    :global(.info) {
      border-color: var(--c-primary-t1);
    }
    :global(.good) {
      border-color: var(--c-secondary-t1);
    }
  }
</style>
